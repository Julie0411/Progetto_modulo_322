import * as React from 'react';
import type { NativeScrollEvent, NativeSyntheticEvent, ScrollViewProps } from 'react-native';
import { ComponentCompat } from '../utils/ComponentCompat';
import type { Layout } from './LayoutManager';
import type { BaseLayoutProvider, Dimension } from './LayoutProvider';
import type { TOnColumnChanged, TOnItemStatusChanged } from './ViewabilityTracker';
import type { RenderStack } from './VirtualRenderer';
import VirtualRenderer from './VirtualRenderer';
export interface RecyclerListViewProps {
    layoutProvider: BaseLayoutProvider;
    itemCount: number;
    rowRenderer: (index: number, extendedState?: object) => JSX.Element | JSX.Element[] | null;
    renderAheadOffset?: number;
    onScroll?: (rawEvent: NativeSyntheticEvent<NativeScrollEvent>) => void;
    onVisibleIndicesChanged?: TOnItemStatusChanged;
    onVisibleColumnChanged?: TOnColumnChanged;
    initialOffset?: number;
    scrollEventThrottle?: number;
    extendedState?: object;
    style?: object | number;
    renderItemContainer?: (props: object, parentProps: object, children?: React.ReactNode) => React.ReactNode;
    scrollViewProps?: ScrollViewProps & Record<string, any>;
    columnsPerPage?: number;
    visibleColumns?: number;
    extraScrollData?: Record<string, any>;
    initialScroll?: (offsetX: number) => void;
    onLoad?: () => void;
}
export interface RecyclerListViewState {
    renderStack: RenderStack;
    internalSnapshot: Record<string, object>;
}
export default class RecyclerListView<P extends RecyclerListViewProps, S extends RecyclerListViewState> extends ComponentCompat<P, S> {
    static defaultProps: {
        initialOffset: number;
        renderAheadOffset: number;
        scrollEventThrottle: number;
    };
    static propTypes: {};
    private refreshRequestDebouncer;
    private _virtualRenderer;
    private _initComplete;
    private _isMounted;
    private _params;
    private _layout;
    private _pendingScrollToOffset;
    private _pendingRenderStack?;
    private _initialOffset;
    private _scrollComponent;
    private _isFirstRender;
    constructor(props: P, context?: any);
    componentWillReceivePropsCompat(newProps: RecyclerListViewProps): void;
    componentDidUpdate(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    scrollToIndex(index: number, animate?: boolean): void;
    getLayout(index: number): Layout | undefined;
    scrollToTop(animate?: boolean): void;
    scrollToEnd(animate?: boolean): void;
    scrollToOffset: (x: number, animate?: boolean) => void;
    updateRenderAheadOffset(renderAheadOffset: number): boolean;
    getCurrentRenderAheadOffset(): number;
    getCurrentScrollOffset(): number;
    getRenderedSize(): Dimension;
    getContentDimension(): Dimension;
    getMaxOffset(visibleColumns?: number): number;
    isScrollable(offset: number, visibleColumns?: number): boolean;
    forceRerender(): void;
    getScrollableNode(): number | null;
    renderCompat(): JSX.Element;
    protected getVirtualRenderer(): VirtualRenderer;
    private _processInitialOffset;
    private _checkAndChangeLayouts;
    private _refreshViewability;
    private _queueStateRefresh;
    private _initStateIfRequired;
    private _renderStackWhenReady;
    private _initTrackers;
    private _renderRowUsingMeta;
    private _generateRenderStack;
    private _onScroll;
}
//# sourceMappingURL=RecyclerListView.d.ts.map