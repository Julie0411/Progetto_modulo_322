/**
 * Computes the positions and dimensions of items that will be rendered by the
 * list. The output from this is utilized by viewability tracker to compute the
 * lists of visible/hidden item.
 */
import type { Dimension } from './LayoutProvider';
export declare abstract class LayoutManager {
    getOffsetForIndex(index: number): Point;
    getStyleOverridesForIndex(_index: number): object | undefined;
    abstract getContentDimension(): Dimension;
    abstract getLayout(index?: number): Layout;
    abstract relayout(itemCount: number): void;
}
export declare class WrapLayoutManager extends LayoutManager {
    private _window;
    private _totalHeight;
    private _totalWidth;
    constructor(renderWindowSize: Dimension);
    getContentDimension(): Dimension;
    getLayout(index?: number): Layout;
    getOffsetForIndex(index: number): Point;
    setMaxBounds(itemDim: Dimension): void;
    relayout(itemCount: number): void;
}
export interface Layout extends Dimension, Point {
}
export interface Point {
    x: number;
    y: number;
}
//# sourceMappingURL=LayoutManager.d.ts.map