import React from 'react';
import type { AnimatedRef } from 'react-native-reanimated';
import type Animated from 'react-native-reanimated';
import { RecyclerListView } from '../../service/recyclerlistview';
import type { RecyclerListViewProps, RecyclerListViewState } from '../../service/recyclerlistview';
interface CalendarListViewProps {
    count: number;
    width: number;
    height: number;
    extraData?: any;
    renderItem: (index: number, extraData?: any) => JSX.Element | JSX.Element[] | null;
    initialOffset?: number;
    renderAheadItem?: number;
    animatedRef?: AnimatedRef<Animated.ScrollView>;
    scrollEventThrottle?: number;
    scrollEnabled?: boolean;
    onScroll?: any;
    onVisibleIndicesChanged?: (all: number[], now: number[], notNow: number[]) => void;
    snapToInterval?: number;
    inverted?: boolean;
    onVisibleColumnChanged?: (props: {
        index: number;
        column: number;
        columns: number;
        extraScrollData: Record<string, any>;
        offset: number;
    }) => void;
    columnsPerPage: number;
    extraScrollData?: Record<string, any>;
    onLoad?: () => void;
}
export type CalendarListViewHandle = RecyclerListView<RecyclerListViewProps, RecyclerListViewState>;
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<CalendarListViewProps & React.RefAttributes<CalendarListViewHandle>>>;
export default _default;
//# sourceMappingURL=index.d.ts.map