"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _constants = require("../constants");
var _BodyContext = require("../context/BodyContext");
var _ThemeProvider = require("../context/ThemeProvider");
var _Text = _interopRequireDefault(require("./Text"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const selectTimeColumnTheme = state => ({
  cellBorderColor: state.colors.border,
  hourTextColor: state.colors.onBackground,
  hourTextStyle: state.hourTextStyle,
  hourBackgroundColor: state.hourBackgroundColor || state.colors.background
});
const TimeColumn = () => {
  const {
    hours,
    maxTimelineHeight,
    spaceFromTop,
    spaceFromBottom,
    timelineHeight,
    renderHour,
    hourWidth,
    minuteHeight,
    start
  } = (0, _BodyContext.useBody)();
  const {
    cellBorderColor,
    hourTextColor,
    hourTextStyle,
    hourBackgroundColor
  } = (0, _ThemeProvider.useTheme)(selectTimeColumnTheme);
  const fontSize = (hourTextStyle === null || hourTextStyle === void 0 ? void 0 : hourTextStyle.fontSize) ?? 10;
  const style = _reactNative.StyleSheet.flatten([styles.hourText, {
    top: -fontSize / 2,
    color: hourTextColor
  }, hourTextStyle]);
  const _renderHour = (hour, index) => {
    let children;
    if (renderHour) {
      children = renderHour({
        hourStr: hour.time,
        minutes: hour.slot,
        style
      });
    } else {
      children = /*#__PURE__*/_react.default.createElement(_Text.default, {
        style: style
      }, hour.time);
    }
    return /*#__PURE__*/_react.default.createElement(HourWrapper, {
      key: index !== undefined ? hour.slot : undefined,
      minutes: hour.slot,
      height: minuteHeight,
      cellBorderColor: cellBorderColor,
      start: start
    }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: [styles.absolute, styles.hour, {
        right: _constants.HOUR_SHORT_LINE_WIDTH + 8
      }]
    }, children));
  };
  const animView = (0, _reactNativeReanimated.useAnimatedStyle)(() => ({
    height: timelineHeight.value - spaceFromTop - spaceFromBottom
  }));
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, styles.absolute, {
      height: maxTimelineHeight + _constants.EXTRA_HEIGHT * 2,
      width: hourWidth,
      backgroundColor: hourBackgroundColor
    }]
  }, /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
    style: [styles.absolute, {
      width: hourWidth,
      top: _constants.EXTRA_HEIGHT + spaceFromTop
    }, animView]
  }, hours.map(_renderHour)), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.rightLine, {
      backgroundColor: cellBorderColor
    }]
  }));
};
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(TimeColumn);
const HourWrapper = ({
  height,
  minutes,
  cellBorderColor,
  children,
  start
}) => {
  const animStyle = (0, _reactNativeReanimated.useAnimatedStyle)(() => ({
    top: (minutes - start) * height.value,
    width: '100%'
  }));
  return /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
    style: [styles.absolute, animStyle]
  }, children, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.absolute, styles.shortLine, {
      backgroundColor: cellBorderColor,
      width: _constants.HOUR_SHORT_LINE_WIDTH
    }]
  }));
};
const styles = _reactNative.StyleSheet.create({
  container: {
    zIndex: 998
  },
  absolute: {
    position: 'absolute'
  },
  rightLine: {
    position: 'absolute',
    width: 1,
    right: 0,
    height: '100%'
  },
  hour: {
    left: 0
  },
  shortLine: {
    height: 1,
    right: 0
  },
  hourText: {
    fontSize: 10,
    textAlign: 'right',
    position: 'absolute',
    left: 0,
    right: 0
  }
});
//# sourceMappingURL=TimeColumn.js.map