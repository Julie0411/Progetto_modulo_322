"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _BodyContext = require("../../context/BodyContext");
var _ThemeProvider = require("../../context/ThemeProvider");
var _UnavailableHoursProvider = require("../../context/UnavailableHoursProvider");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const UnavailableHours = ({
  visibleDates
}) => {
  const _renderColumn = (currentUnix, index) => /*#__PURE__*/_react.default.createElement(UnavailableColumn, {
    key: `UnavailableHours_${currentUnix}`,
    currentUnix: Number(currentUnix),
    index: index
  });
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: _reactNative.StyleSheet.absoluteFill,
    pointerEvents: "box-none"
  }, Object.keys(visibleDates).map(_renderColumn));
};
var _default = exports.default = UnavailableHours;
const UnavailableColumn = /*#__PURE__*/(0, _react.memo)(({
  currentUnix,
  index
}) => {
  const {
    start: calendarStart,
    renderCustomUnavailableHour
  } = (0, _BodyContext.useBody)();
  const backgroundColor = (0, _ThemeProvider.useTheme)((0, _react.useCallback)(state => state.unavailableHourBackgroundColor || state.colors.surface, []));
  const unavailableHours = (0, _UnavailableHoursProvider.useUnavailableHoursByDate)(currentUnix);
  if (!unavailableHours) {
    return null;
  }
  const _renderSpecialRegion = (props, regionIndex) => {
    const clampedStart = Math.max(props.start - calendarStart, 0);
    const start = props.start > calendarStart ? props.start : calendarStart;
    const totalMinutes = props.end - start;
    return /*#__PURE__*/_react.default.createElement(UnavailableHourItem, {
      key: `${currentUnix}_${regionIndex}`,
      diffDays: index,
      diffMinutes: clampedStart,
      totalMinutes: totalMinutes,
      backgroundColor: props.backgroundColor || backgroundColor,
      enableBackgroundInteraction: props.enableBackgroundInteraction,
      renderCustomUnavailableHour: renderCustomUnavailableHour,
      originalProps: props
    });
  };
  return unavailableHours.map(_renderSpecialRegion);
});
const UnavailableHourItem = ({
  totalMinutes,
  diffDays,
  diffMinutes,
  backgroundColor,
  enableBackgroundInteraction,
  renderCustomUnavailableHour,
  originalProps
}) => {
  const {
    minuteHeight,
    columnWidthAnim
  } = (0, _BodyContext.useBody)();
  const height = (0, _reactNativeReanimated.useDerivedValue)(() => minuteHeight.value * totalMinutes);
  const animView = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
    return {
      width: columnWidthAnim.value,
      height: height.value,
      top: minuteHeight.value * diffMinutes,
      left: columnWidthAnim.value * diffDays
    };
  });
  return /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
    pointerEvents: enableBackgroundInteraction ? 'none' : 'auto',
    style: [styles.container, {
      backgroundColor
    }, animView]
  }, renderCustomUnavailableHour && renderCustomUnavailableHour({
    ...originalProps,
    width: columnWidthAnim,
    height
  }));
};
const styles = _reactNative.StyleSheet.create({
  container: {
    position: 'absolute'
  }
});
//# sourceMappingURL=UnavailableHours.js.map