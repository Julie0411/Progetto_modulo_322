"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _LocaleProvider = require("../context/LocaleProvider");
var _ThemeProvider = require("../context/ThemeProvider");
var _dateUtils = require("../utils/dateUtils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ResourceHeaderItem = ({
  resources,
  startUnix,
  DateComponent,
  renderResource,
  isShowSeparator = true,
  dateFormat = 'yyyy-MM-dd',
  isShowWeekDay = true
}) => {
  const {
    weekDayShort
  } = (0, _LocaleProvider.useLocale)();
  const borderColor = (0, _ThemeProvider.useTheme)((0, _react.useCallback)(state => state.colors.border, []));
  const _renderDate = () => {
    const date = (0, _dateUtils.parseDateTime)(startUnix);
    return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: styles.dateContainer
    }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
      style: styles.dateText
    }, `${date.toFormat(dateFormat)}`, isShowWeekDay && ` (${weekDayShort[date.weekday % 7]})`));
  };
  const _renderResource = resource => {
    return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      key: resource.id,
      style: styles.resource
    }, isShowSeparator && /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: {
        width: 1,
        position: 'absolute',
        left: -0.5,
        height: '100%',
        backgroundColor: borderColor
      }
    }), renderResource ? renderResource(resource) : /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: [styles.resourceContent, {
        borderColor
      }]
    }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, null, resource.title)));
  };
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.container
  }, DateComponent ?? _renderDate(), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.resourceContainer
  }, resources === null || resources === void 0 ? void 0 : resources.map(_renderResource)));
};
var _default = exports.default = ResourceHeaderItem;
const styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  resourceContainer: {
    flex: 1,
    flexDirection: 'row'
  },
  resource: {
    flex: 1
  },
  resourceContent: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    borderColor: '#ccc',
    borderTopWidth: 1
  },
  dateContainer: {
    paddingVertical: 4
  },
  dateText: {
    textAlign: 'center',
    fontWeight: 'bold'
  }
});
//# sourceMappingURL=ResourceHeaderItem.js.map