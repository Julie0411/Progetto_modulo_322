"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _BodyContext = require("../context/BodyContext");
var _NowIndicatorProvider = require("../context/NowIndicatorProvider");
var _ThemeProvider = require("../context/ThemeProvider");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const NowIndicatorInner = ({
  dayIndex,
  currentTime
}) => {
  const {
    minuteHeight,
    start,
    end,
    startOffset,
    columnWidthAnim,
    NowIndicatorComponent
  } = (0, _BodyContext.useBody)();
  const nowIndicatorColor = (0, _ThemeProvider.useTheme)((0, _react.useCallback)(state => state.nowIndicatorColor || state.colors.primary, []));
  const left = (0, _reactNativeReanimated.useDerivedValue)(() => {
    return dayIndex * columnWidthAnim.value;
  }, [dayIndex]);
  const opacity = (0, _reactNativeReanimated.useDerivedValue)(() => {
    return currentTime.value >= start && currentTime.value <= end ? 1 : 0;
  }, [start, end]);
  const animView = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
    return {
      width: columnWidthAnim.value,
      left: left.value,
      top: currentTime.value * minuteHeight.value - startOffset.value,
      opacity: opacity.value
    };
  });
  return /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
    pointerEvents: "box-none",
    style: [styles.container, animView]
  }, NowIndicatorComponent || /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: styles.lineContainer
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.line, {
      backgroundColor: nowIndicatorColor
    }]
  }), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.dot, {
      backgroundColor: nowIndicatorColor
    }]
  })));
};
const NowIndicator = ({
  visibleDates
}) => {
  const {
    showNowIndicator
  } = (0, _BodyContext.useBody)();
  const {
    currentDateUnix,
    currentTime
  } = (0, _NowIndicatorProvider.useNowIndicator)();
  const visibleDate = visibleDates[currentDateUnix];
  const isShowNowIndicator = showNowIndicator && visibleDate;
  if (!isShowNowIndicator) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(NowIndicatorInner, {
    currentTime: currentTime,
    dayIndex: visibleDate.diffDays - 1
  });
};
var _default = exports.default = /*#__PURE__*/_react.default.memo(NowIndicator);
const styles = _reactNative.StyleSheet.create({
  container: {
    position: 'absolute'
  },
  line: {
    position: 'absolute',
    height: 2,
    backgroundColor: '#007aff',
    width: '100%'
  },
  dot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#007aff',
    position: 'absolute',
    left: -4
  },
  lineContainer: {
    justifyContent: 'center'
  }
});
//# sourceMappingURL=NowIndicator.js.map