"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useActions = exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _useLatestCallback = _interopRequireDefault(require("../hooks/useLatestCallback"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ActionContext = /*#__PURE__*/_react.default.createContext(undefined);
const ActionsProvider = ({
  children,
  ...props
}) => {
  const onDateChanged = (0, _useLatestCallback.default)(props.onDateChanged);
  const onChange = (0, _useLatestCallback.default)(props.onChange);
  const onPressBackground = (0, _useLatestCallback.default)(props.onPressBackground);
  const onPressDayNumber = (0, _useLatestCallback.default)(props.onPressDayNumber);
  const onRefresh = (0, _useLatestCallback.default)(props.onRefresh);
  const onPressEvent = (0, _useLatestCallback.default)(props.onPressEvent);
  const onDragEventStart = (0, _useLatestCallback.default)(props.onDragEventStart);
  const onDragEventEnd = (0, _useLatestCallback.default)(props.onDragEventEnd);
  const onLongPressEvent = (0, _useLatestCallback.default)(props.onLongPressEvent);
  const onLongPressBackground = (0, _useLatestCallback.default)(props.onLongPressBackground);
  const onDragSelectedEventStart = (0, _useLatestCallback.default)(props.onDragSelectedEventStart);
  const onDragSelectedEventEnd = (0, _useLatestCallback.default)(props.onDragSelectedEventEnd);
  const onDragCreateEventStart = (0, _useLatestCallback.default)(props.onDragCreateEventStart);
  const onDragCreateEventEnd = (0, _useLatestCallback.default)(props.onDragCreateEventEnd);
  const onLoad = (0, _useLatestCallback.default)(props.onLoad);
  const value = (0, _react.useMemo)(() => ({
    onDateChanged,
    onChange,
    onPressBackground,
    onPressDayNumber,
    onRefresh,
    onPressEvent,
    onLongPressEvent,
    onDragEventStart,
    onDragEventEnd,
    onDragSelectedEventStart,
    onDragSelectedEventEnd,
    onLongPressBackground,
    onDragCreateEventStart,
    onDragCreateEventEnd,
    onLoad
  }), [onChange, onDateChanged, onPressBackground, onPressDayNumber, onPressEvent, onRefresh, onLongPressEvent, onDragEventStart, onDragEventEnd, onDragSelectedEventStart, onDragSelectedEventEnd, onLongPressBackground, onDragCreateEventStart, onDragCreateEventEnd, onLoad]);
  return /*#__PURE__*/_react.default.createElement(ActionContext.Provider, {
    value: value
  }, children);
};
var _default = exports.default = ActionsProvider;
const useActions = () => {
  const context = _react.default.useContext(ActionContext);
  if (context === undefined) {
    throw new Error('ActionsContext is not available');
  }
  return context;
};
exports.useActions = useActions;
//# sourceMappingURL=ActionsProvider.js.map