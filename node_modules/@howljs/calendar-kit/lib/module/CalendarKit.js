function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
import CalendarBody from './CalendarBody';
import CalendarContainer from './CalendarContainer';
import CalendarDayBar from './CalendarHeader';
const CalendarKit = (props, ref) => {
  const {
    hourFormat,
    renderHour,
    showNowIndicator,
    dayBarHeight,
    renderCustomOutOfRange,
    renderCustomUnavailableHour,
    renderEvent,
    renderDraggableEvent,
    renderDraggingEvent,
    renderDraggingHour,
    renderExpandIcon,
    renderHeaderItem,
    NowIndicatorComponent,
    LeftAreaComponent,
    headerBottomHeight,
    collapsedItems,
    eventMaxMinutes,
    eventInitialMinutes,
    eventMinMinutes,
    renderCustomHorizontalLine,
    ...rest
  } = props;
  const dayBarProps = {
    dayBarHeight,
    renderHeaderItem,
    renderExpandIcon,
    renderEvent,
    LeftAreaComponent,
    headerBottomHeight,
    collapsedItems,
    eventMaxMinutes,
    eventInitialMinutes,
    eventMinMinutes
  };
  const bodyProps = {
    hourFormat,
    renderHour,
    renderDraggingHour,
    showNowIndicator,
    renderCustomOutOfRange,
    renderCustomUnavailableHour,
    renderEvent,
    renderDraggableEvent,
    renderDraggingEvent,
    NowIndicatorComponent,
    renderCustomHorizontalLine
  };
  return /*#__PURE__*/React.createElement(CalendarContainer, _extends({}, rest, {
    ref: ref
  }), /*#__PURE__*/React.createElement(CalendarDayBar, dayBarProps), /*#__PURE__*/React.createElement(CalendarBody, bodyProps));
};
export default /*#__PURE__*/forwardRef(CalendarKit);
//# sourceMappingURL=CalendarKit.js.map